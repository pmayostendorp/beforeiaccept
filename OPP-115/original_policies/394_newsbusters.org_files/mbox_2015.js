var mboxCopyright = "Copyright 1996-2014. Adobe Systems Incorporated. All rights reserved.";var TNT = TNT || {};TNT.a = TNT.a || {};TNT.a.nestedMboxes = [];TNT.a.isDomLoaded = false;TNT.getGlobalMboxName = function () { return "target-global-mbox";};TNT.getGlobalMboxLocation = function () { return "";};TNT.isAutoCreateGlobalMbox = function () { return true;};TNT.getClientMboxExtraParameters = function () { return "";};TNT.a.b = function () { var c = {}.toString; var d = window.targetPageParams; var e = null; if (typeof(d) === 'undefined' || c.call(d) !== '[object Function]') { return []; } try { e = d(); } catch (f) { } if (e === null) { return []; } if (c.call(e) === '[object Array]') { return e; } if (c.call(e) === '[object String]' && e.length > 0) { var g = e.split("&"); for (var h = 0; h < g.length; h++) { if (g[h].indexOf('=') <= 0) { g.splice(h, 1); continue; } g[h] = decodeURIComponent(g[h]); } return g; } if (c.call(e) === '[object Object]') { return TNT.a.i([], e); } return [];};TNT.a.i = function (j, k) { var l = []; var m = j.join('.'); var n = undefined; for (o in k) { if (!k.hasOwnProperty(o)) { continue; } n = k[o]; if (typeof n === "object") { j.push(o); var p = TNT.a.i(j, n); j.pop(); for (var h = 0; h < p.length; h++) { l.push(p[h]); } continue; } l.push((m.length > 0 ? m + '.' : '') + o + '=' + n); } return l;}; mboxUrlBuilder = function(q, r) { this.q = q; this.r = r; this.s = new Array(); this.t = function(u) { return u; }; this.v = null;};mboxUrlBuilder.prototype.addNewParameter = function (w, x) { this.s.push({name: w, value: x}); return this;};mboxUrlBuilder.prototype.addParameterIfAbsent = function (w, x) { if (x) { for (var y = 0; y < this.s.length; y++) { var z = this.s[y]; if (z.name === w) { return this; } } this.checkInvalidCharacters(w); return this.addNewParameter(w, x); }};mboxUrlBuilder.prototype.addParameter = function(w, x) { this.checkInvalidCharacters(w); for (var y = 0; y < this.s.length; y++) { var z = this.s[y]; if (z.name === w) { z.value = x; return this; } } return this.addNewParameter(w, x);};mboxUrlBuilder.prototype.addParameters = function(s) { if (!s) { return this; } for (var y = 0; y < s.length; y++) { var A = s[y].indexOf('='); if (A == -1 || A == 0) { continue; } this.addParameter(s[y].substring(0, A), s[y].substring(A + 1, s[y].length)); } return this;};mboxUrlBuilder.prototype.setServerType = function(B) { this.C = B;};mboxUrlBuilder.prototype.setBasePath = function(v) { this.v = v;};mboxUrlBuilder.prototype.setUrlProcessAction = function(D) { this.t = D;};mboxUrlBuilder.prototype.buildUrl = function() { var E = this.v ? this.v : '/m2/' + this.r + '/mbox/' + this.C; var F = document.location.protocol == 'file:' ? 'http:' : document.location.protocol; var u = F + "//" + this.q + E; var G = u.indexOf('?') != -1 ? '&' : '?'; for (var y = 0; y < this.s.length; y++) { var z = this.s[y]; u += G + encodeURIComponent(z.name) + '=' + encodeURIComponent(z.value); G = '&'; } return this.H(this.t(u));};mboxUrlBuilder.prototype.getParameters = function() { return this.s;};mboxUrlBuilder.prototype.setParameters = function(s) { this.s = s;};mboxUrlBuilder.prototype.clone = function() { var I = new mboxUrlBuilder(this.q, this.r); I.setServerType(this.C); I.setBasePath(this.v); I.setUrlProcessAction(this.t); for (var y = 0; y < this.s.length; y++) { I.addParameter(this.s[y].name, this.s[y].value); } return I;};mboxUrlBuilder.prototype.H = function(J) { return J.replace(/\"/g, '&quot;').replace(/>/g, '&gt;');}; mboxUrlBuilder.prototype.checkInvalidCharacters = function (w) { var K = new RegExp('(\'|")'); if (K.exec(w)) { throw "Parameter '" + w + "' contains invalid characters"; } };mboxStandardFetcher = function() { };mboxStandardFetcher.prototype.getType = function() { return 'standard';};mboxStandardFetcher.prototype.fetch = function(L) { L.setServerType(this.getType()); document.write('<' + 'scr' + 'ipt src="' + L.buildUrl() + '" language="JavaScript"><' + '\/scr' + 'ipt>');};mboxStandardFetcher.prototype.cancel = function() { };mboxAjaxFetcher = function() { };mboxAjaxFetcher.prototype.getType = function() { return 'ajax';};mboxAjaxFetcher.prototype.fetch = function(L) { L.setServerType(this.getType()); var u = L.buildUrl(); this.M = document.createElement('script'); this.M.src = u; document.body.appendChild(this.M);};mboxAjaxFetcher.prototype.cancel = function() { };mboxMap = function() { this.N = new Object(); this.O = new Array();};mboxMap.prototype.put = function(P, x) { if (!this.N[P]) { this.O[this.O.length] = P; } this.N[P] = x;};mboxMap.prototype.get = function(P) { return this.N[P];};mboxMap.prototype.remove = function(P) { this.N[P] = undefined; var Q = []; for (var i = 0; i < this.O.length; i++) { if (this.O[i] !== P) { Q.push(this.O[i]) } } this.O = Q;};mboxMap.prototype.each = function(D) { for (var y = 0; y < this.O.length; y++ ) { var P = this.O[y]; var x = this.N[P]; if (x) { var l = D(P, x); if (l === false) { break; } } }};mboxMap.prototype.isEmpty = function() { return this.O.length === 0;};mboxFactory = function(R, r, S) { this.T = false; this.R = R; this.S = S; this.U = new mboxList(); mboxFactories.put(S, this); this.V = typeof document.createElement('div').replaceChild != 'undefined' && (function() { return true; })() && typeof document.getElementById != 'undefined' && typeof (window.attachEvent || document.addEventListener || window.addEventListener) != 'undefined' && typeof encodeURIComponent != 'undefined'; this.W = this.V && mboxGetPageParameter('mboxDisable') == null; var X = S == 'default'; this.Y = new mboxCookieManager( 'mbox' + (X ? '' : ('-' + S)), (function() { return mboxCookiePageDomain(); })()); this.W = this.W && (this.Y.getCookie('disable') == null); if (this.isAdmin()) { this.enable(); } this.Z(); this._ = mboxGenerateId(); this.ab = mboxScreenHeight(); this.bb = mboxScreenWidth(); this.cb = mboxBrowserWidth(); this.db = mboxBrowserHeight(); this.eb = mboxScreenColorDepth(); this.fb = mboxBrowserTimeOffset(); this.gb = new mboxSession(this._, 'mboxSession', 'session', 31 * 60, this.Y); this.hb = new mboxPC('PC', 1209600, this.Y); this.L = new mboxUrlBuilder(R, r); this.ib(this.L, X); this.jb = new Date().getTime(); this.kb = this.jb; var lb = this; this.addOnLoad(function() { lb.kb = new Date().getTime(); }); if (this.V) { this.addOnLoad(function() { lb.T = true; lb.getMboxes().each(function(mb) { mb.nb(); mb.setFetcher(new mboxAjaxFetcher()); mb.finalize(); }); TNT.a.nestedMboxes = []; TNT.a.isDomLoaded = true; }); if (this.W) { this.limitTraffic(100, 10368000); this.ob(); this.pb = new mboxSignaler(function(qb, s) { return lb.create(qb, s); }, this.Y); } }};mboxFactory.prototype.isEnabled = function() { return this.W;};mboxFactory.prototype.getDisableReason = function() { return this.Y.getCookie('disable');};mboxFactory.prototype.isSupported = function() { return this.V;};mboxFactory.prototype.disable = function(rb, sb) { if (typeof rb == 'undefined') { rb = 60 * 60; } if (typeof sb == 'undefined') { sb = 'unspecified'; } if (!this.isAdmin()) { this.W = false; this.Y.setCookie('disable', sb, rb); }};mboxFactory.prototype.enable = function() { this.W = true; this.Y.deleteCookie('disable');};mboxFactory.prototype.isAdmin = function() { return document.location.href.indexOf('mboxEnv') != -1;};mboxFactory.prototype.limitTraffic = function(tb, rb) {};mboxFactory.prototype.addOnLoad = function(ub) { if (this.isDomLoaded()) { ub(); } else { var vb = false; var wb = function() { if (vb) { return; } vb = true; ub(); }; this.xb.push(wb); if (this.isDomLoaded() && !vb) { wb(); } }};mboxFactory.prototype.getEllapsedTime = function() { return this.kb - this.jb;};mboxFactory.prototype.getEllapsedTimeUntil = function(yb) { return yb - this.jb;};mboxFactory.prototype.getMboxes = function() { return this.U;};mboxFactory.prototype.get = function(qb, zb) { return this.U.get(qb).getById(zb || 0);};mboxFactory.prototype.update = function(qb, s) { if (!this.isEnabled()) { return; } if (!this.isDomLoaded()) { var lb = this; this.addOnLoad(function() { lb.update(qb, s); }); return; } if (this.U.get(qb).length() == 0) { throw "Mbox " + qb + " is not defined"; } this.U.get(qb).each(function(mb) { mb.getUrlBuilder().addParameter('mboxPage', mboxGenerateId()); mboxFactoryDefault.setVisitorIdParameters(mb.getUrlBuilder(), qb); mb.load(s); });};mboxFactory.prototype.setVisitorIdParameters = function(u, qb) { var imsOrgId = 'DA11332E5321D0550A490D45@AdobeOrg'; if (typeof Visitor == 'undefined' || imsOrgId.length == 0) { return; } var visitor = Visitor.getInstance(imsOrgId); if (visitor.isAllowed()) { var addVisitorValueToUrl = function(param, getter, mboxName) { if (visitor[getter]) { var callback = function(value) { if (value) { u.addParameter(param, value); } }; var value; if (typeof mboxName != 'undefined') { value = visitor[getter]("mbox:" + mboxName); } else { value = visitor[getter](callback); } callback(value); } }; addVisitorValueToUrl('mboxMCGVID', "getMarketingCloudVisitorID"); addVisitorValueToUrl('mboxMCGLH', "getAudienceManagerLocationHint"); addVisitorValueToUrl('mboxAAMB', "getAudienceManagerBlob"); addVisitorValueToUrl('mboxMCAVID', "getAnalyticsVisitorID"); addVisitorValueToUrl('mboxMCSDID', "getSupplementalDataID", qb); }};mboxFactory.prototype.create = function( qb, s, Ab) { if (!this.isSupported()) { return null; } var u = this.L.clone(); u.addParameter('mboxCount', this.U.length() + 1); u.addParameters(s); this.setVisitorIdParameters(u, qb); var zb = this.U.get(qb).length(); var Bb = this.S + '-' + qb + '-' + zb; var Cb; if (Ab) { Cb = new mboxLocatorNode(Ab); } else { if (this.T) { throw 'The page has already been loaded, can\'t write marker'; } Cb = new mboxLocatorDefault(Bb); } try { var lb = this; var Db = 'mboxImported-' + Bb; var mb = new mbox(qb, zb, u, Cb, Db); if (this.W) { mb.setFetcher( this.T ? new mboxAjaxFetcher() : new mboxStandardFetcher()); } mb.setOnError(function(Eb, B) { mb.setMessage(Eb); mb.activate(); if (!mb.isActivated()) { lb.disable(60 * 60, Eb); window.location.reload(false); } }); this.U.add(mb); } catch (Fb) { this.disable(); throw 'Failed creating mbox "' + qb + '", the error was: ' + Fb; } var Gb = new Date(); u.addParameter('mboxTime', Gb.getTime() - (Gb.getTimezoneOffset() * 60000)); return mb;};mboxFactory.prototype.getCookieManager = function() { return this.Y;};mboxFactory.prototype.getPageId = function() { return this._;};mboxFactory.prototype.getPCId = function() { return this.hb;};mboxFactory.prototype.getSessionId = function() { return this.gb;};mboxFactory.prototype.getSignaler = function() { return this.pb;};mboxFactory.prototype.getUrlBuilder = function() { return this.L;};mboxFactory.prototype.ib = function(u, X) { u.addParameter('mboxHost', document.location.hostname) .addParameter('mboxSession', this.gb.getId()); if (!X) { u.addParameter('mboxFactoryId', this.S); } if (this.hb.getId() != null) { u.addParameter('mboxPC', this.hb.getId()); } u.addParameter('mboxPage', this._); u.addParameter('screenHeight', this.ab); u.addParameter('screenWidth', this.bb); u.addParameter('browserWidth', this.cb); u.addParameter('browserHeight', this.db); u.addParameter('browserTimeOffset', this.fb); u.addParameter('colorDepth', this.eb); u.addParameter('mboxXDomain', "x-only"); u.setUrlProcessAction(function(u) { u += '&mboxURL=' + encodeURIComponent(document.location); var Hb = encodeURIComponent(document.referrer); if (u.length + Hb.length < 2000) { u += '&mboxReferrer=' + Hb; } u += '&mboxVersion=' + mboxVersion; return u; });};mboxFactory.prototype.Ib = function() { return "";};mboxFactory.prototype.ob = function() { document.write('<style>.' + 'mboxDefault' + ' { visibility:hidden; }</style>');};mboxFactory.prototype.isDomLoaded = function() { return this.T;};mboxFactory.prototype.Z = function() { if (this.xb != null) { return; } this.xb = new Array(); var lb = this; (function() { var Jb = document.addEventListener ? "DOMContentLoaded" : "onreadystatechange"; var Kb = false; var Lb = function() { if (Kb) { return; } Kb = true; for (var i = 0; i < lb.xb.length; ++i) { lb.xb[i](); } }; if (document.addEventListener) { document.addEventListener(Jb, function() { document.removeEventListener(Jb, arguments.callee, false); Lb(); }, false); window.addEventListener("load", function(){ document.removeEventListener("load", arguments.callee, false); Lb(); }, false); } else if (document.attachEvent) { if (self !== self.top) { document.attachEvent(Jb, function() { if (document.readyState === 'complete') { document.detachEvent(Jb, arguments.callee); Lb(); } }); } else { var Mb = function() { try { document.documentElement.doScroll('left'); Lb(); } catch (Nb) { setTimeout(Mb, 13); } }; Mb(); } } if (document.readyState === "complete") { Lb(); } })();};mboxSignaler = function(Ob, Y) { this.Y = Y; var Pb = Y.getCookieNames('signal-'); for (var y = 0; y < Pb.length; y++) { var Qb = Pb[y]; var Rb = Y.getCookie(Qb).split('&'); var mb = Ob(Rb[0], Rb); mb.load(); Y.deleteCookie(Qb); }};mboxSignaler.prototype.signal = function(Sb, qb ) { this.Y.setCookie('signal-' + Sb, mboxShiftArray(arguments).join('&'), 45 * 60);};mboxList = function() { this.U = new Array();};mboxList.prototype.add = function(mb) { if (mb != null) { this.U[this.U.length] = mb; }};mboxList.prototype.get = function(qb) { var l = new mboxList(); for (var y = 0; y < this.U.length; y++) { var mb = this.U[y]; if (mb.getName() == qb) { l.add(mb); } } return l;};mboxList.prototype.getById = function(h) { return this.U[h];};mboxList.prototype.length = function() { return this.U.length;};mboxList.prototype.each = function(D) { if (typeof D !== 'function') { throw 'Action must be a function, was: ' + typeof(D); } for (var y = 0; y < this.U.length; y++) { D(this.U[y]); }};mboxLocatorDefault = function(w) { this.w = 'mboxMarker-' + w; document.write('<div id="' + this.w + '" style="visibility:hidden;display:none">&nbsp;</div>');};mboxLocatorDefault.prototype.locate = function() { var Tb = document.getElementById(this.w); while (Tb != null) { if (Tb.nodeType == 1) { if (Tb.className == 'mboxDefault') { return Tb; } } Tb = Tb.previousSibling; } return null;};mboxLocatorDefault.prototype.force = function() { var Ub = document.createElement('div'); Ub.className = 'mboxDefault'; var Vb = document.getElementById(this.w); if (Vb) { Vb.parentNode.insertBefore(Ub, Vb); } return Ub;};mboxLocatorNode = function(Wb) { this.Tb = Wb;};mboxLocatorNode.prototype.locate = function() { return typeof this.Tb == 'string' ? document.getElementById(this.Tb) : this.Tb;};mboxLocatorNode.prototype.force = function() { return null;};mboxCreate = function(qb ) { var mb = mboxFactoryDefault.create( qb, mboxShiftArray(arguments)); if (mb) { mb.load(); } return mb;};mboxDefine = function(Ab, qb ) { var mb = mboxFactoryDefault.create(qb, mboxShiftArray(mboxShiftArray(arguments)), Ab); return mb;};mboxUpdate = function(qb ) { mboxFactoryDefault.update(qb, mboxShiftArray(arguments));};mbox = function(w, Xb, L, Yb, Db) { this.Zb = null; this._b = 0; this.Cb = Yb; this.Db = Db; this.ac = null; this.bc = new mboxOfferContent(); this.Ub = null; this.L = L; this.message = ''; this.cc = new Object(); this.dc = 0; this.Xb = Xb; this.w = w; this.ec(); L.addParameter('mbox', w) .addParameter('mboxId', Xb); this.fc = function() {}; this.gc = function() {}; this.hc = null; this.ic = document.documentMode >= 10 && !TNT.a.isDomLoaded; if (this.ic) { this.jc = TNT.a.nestedMboxes; this.jc.push(this.w); }};mbox.prototype.getId = function() { return this.Xb;};mbox.prototype.ec = function() { if (this.w.length > 250) { throw "Mbox Name " + this.w + " exceeds max length of " + "250 characters."; } else if (this.w.match(/^\s+|\s+$/g)) { throw "Mbox Name " + this.w + " has leading/trailing whitespace(s)."; }};mbox.prototype.getName = function() { return this.w;};mbox.prototype.getParameters = function() { var s = this.L.getParameters(); var l = new Array(); for (var y = 0; y < s.length; y++) { if (s[y].name.indexOf('mbox') != 0) { l[l.length] = s[y].name + '=' + s[y].value; } } return l;};mbox.prototype.setOnLoad = function(D) { this.gc = D; return this;};mbox.prototype.setMessage = function(Eb) { this.message = Eb; return this;};mbox.prototype.setOnError = function(fc) { this.fc = fc; return this;};mbox.prototype.setFetcher = function(kc) { if (this.ac) { this.ac.cancel(); } this.ac = kc; return this;};mbox.prototype.getFetcher = function() { return this.ac;};mbox.prototype.load = function(s) { if (this.ac == null) { return this; } this.setEventTime("load.start"); this.cancelTimeout(); this._b = 0; var L = (s && s.length > 0) ? this.L.clone().addParameters(s) : this.L; this.ac.fetch(L); var lb = this; this.lc = setTimeout(function() { lb.fc('browser timeout', lb.ac.getType()); }, 15000); this.setEventTime("load.end"); return this;};mbox.prototype.loaded = function() { this.cancelTimeout(); if (!this.activate()) { var lb = this; setTimeout(function() { lb.loaded(); }, 100); }};mbox.prototype.activate = function() { if (this._b) { return this._b; } this.setEventTime('activate' + ++this.dc + '.start'); if (this.ic && this.jc[this.jc.length - 1] !== this.w) { return this._b; } if (this.show()) { this.cancelTimeout(); this._b = 1; } this.setEventTime('activate' + this.dc + '.end'); if (this.ic) { this.jc.pop(); } return this._b;};mbox.prototype.isActivated = function() { return this._b;};mbox.prototype.setOffer = function(bc) { if (bc && bc.show && bc.setOnLoad) { this.bc = bc; } else { throw 'Invalid offer'; } return this;};mbox.prototype.getOffer = function() { return this.bc;};mbox.prototype.show = function() { this.setEventTime('show.start'); var l = this.bc.show(this); this.setEventTime(l == 1 ? "show.end.ok" : "show.end"); return l;};mbox.prototype.showContent = function(mc) { if (mc == null) { return 0; } if (this.Ub == null || !this.Ub.parentNode) { this.Ub = this.getDefaultDiv(); if (this.Ub == null) { return 0; } } if (this.Ub != mc) { this.nc(this.Ub); this.Ub.parentNode.replaceChild(mc, this.Ub); this.Ub = mc; } this.oc(mc); this.gc(); return 1;};mbox.prototype.hide = function() { this.setEventTime('hide.start'); var l = this.showContent(this.getDefaultDiv()); this.setEventTime(l == 1 ? 'hide.end.ok' : 'hide.end.fail'); return l;};mbox.prototype.finalize = function() { this.setEventTime('finalize.start'); this.cancelTimeout(); if (this.getDefaultDiv() == null) { if (this.Cb.force() != null) { this.setMessage('No default content, an empty one has been added'); } else { this.setMessage('Unable to locate mbox'); } } if (!this.activate()) { this.hide(); this.setEventTime('finalize.end.hide'); } this.setEventTime('finalize.end.ok');};mbox.prototype.cancelTimeout = function() { if (this.lc) { clearTimeout(this.lc); } if (this.ac != null) { this.ac.cancel(); }};mbox.prototype.getDiv = function() { return this.Ub;};mbox.prototype.getDefaultDiv = function() { if (this.hc == null) { this.hc = this.Cb.locate(); } return this.hc;};mbox.prototype.setEventTime = function(pc) { this.cc[pc] = (new Date()).getTime();};mbox.prototype.getEventTimes = function() { return this.cc;};mbox.prototype.getImportName = function() { return this.Db;};mbox.prototype.getURL = function() { return this.L.buildUrl();};mbox.prototype.getUrlBuilder = function() { return this.L;};mbox.prototype.qc = function(Ub) { return Ub.style.display != 'none';};mbox.prototype.oc = function(Ub) { this.rc(Ub, true);};mbox.prototype.nc = function(Ub) { this.rc(Ub, false);};mbox.prototype.rc = function(Ub, sc) { Ub.style.visibility = sc ? "visible" : "hidden"; Ub.style.display = sc ? "block" : "none";};mbox.prototype.nb = function() { this.ic = false;};mbox.prototype.relocateDefaultDiv = function() { this.hc = this.Cb.locate();};mboxOfferContent = function() { this.gc = function() {};};mboxOfferContent.prototype.show = function(mb) { var l = mb.showContent(document.getElementById(mb.getImportName())); if (l == 1) { this.gc(); } return l;};mboxOfferContent.prototype.setOnLoad = function(gc) { this.gc = gc;};mboxOfferAjax = function(mc) { this.mc = mc; this.gc = function() {};};mboxOfferAjax.prototype.setOnLoad = function(gc) { this.gc = gc;};mboxOfferAjax.prototype.show = function(mb) { var tc = document.createElement('div'); tc.id = mb.getImportName(); tc.innerHTML = this.mc; var l = mb.showContent(tc); if (l == 1) { this.gc(); } return l;};mboxOfferDefault = function() { this.gc = function() {};};mboxOfferDefault.prototype.setOnLoad = function(gc) { this.gc = gc;};mboxOfferDefault.prototype.show = function(mb) { var l = mb.hide(); if (l == 1) { this.gc(); } return l;};mboxCookieManager = function mboxCookieManager(w, uc) { this.w = w; this.uc = uc == '' || uc.indexOf('.') == -1 ? '' : '; domain=' + uc; this.vc = new mboxMap(); this.loadCookies();};mboxCookieManager.prototype.isEnabled = function() { this.setCookie('check', 'true', 60); this.loadCookies(); return this.getCookie('check') == 'true';};mboxCookieManager.prototype.setCookie = function(w, x, rb) { if (typeof w != 'undefined' && typeof x != 'undefined' && typeof rb != 'undefined') { var wc = new Object(); wc.name = w; wc.value = escape(x); wc.expireOn = Math.ceil(rb + new Date().getTime() / 1000); this.vc.put(w, wc); this.saveCookies(); }};mboxCookieManager.prototype.getCookie = function(w) { var wc = this.vc.get(w); return wc ? unescape(wc.value) : null;};mboxCookieManager.prototype.deleteCookie = function(w) { this.vc.remove(w); this.saveCookies();};mboxCookieManager.prototype.getCookieNames = function(xc) { var yc = new Array(); this.vc.each(function(w, wc) { if (w.indexOf(xc) == 0) { yc[yc.length] = w; } }); return yc;};mboxCookieManager.prototype.saveCookies = function() { var zc = true; var Ac = 'disable'; var Bc = new Array(); var Cc = 0; this.vc.each(function(w, wc) { if(!zc || w === Ac) { Bc[Bc.length] = w + '#' + wc.value + '#' + wc.expireOn; if (Cc < wc.expireOn) { Cc = wc.expireOn; } } }); var Dc = new Date(Cc * 1000); document.cookie = this.w + '=' + Bc.join('|') + '; expires=' + Dc.toGMTString() + '; path=/' + this.uc;};mboxCookieManager.prototype.loadCookies = function() { this.vc = new mboxMap(); var Ec = document.cookie.indexOf(this.w + '='); if (Ec != -1) { var Fc = document.cookie.indexOf(';', Ec); if (Fc == -1) { Fc = document.cookie.indexOf(',', Ec); if (Fc == -1) { Fc = document.cookie.length; } } var Gc = document.cookie.substring( Ec + this.w.length + 1, Fc).split('|'); var Hc = Math.ceil(new Date().getTime() / 1000); for (var y = 0; y < Gc.length; y++) { var wc = Gc[y].split('#'); if (Hc <= wc[2]) { var Ic = new Object(); Ic.name = wc[0]; Ic.value = wc[1]; Ic.expireOn = wc[2]; this.vc.put(Ic.name, Ic); } } }};mboxSession = function(Jc, Kc, Qb, Lc, Y) { this.Kc = Kc; this.Qb = Qb; this.Lc = Lc; this.Y = Y; this.Mc = false; this.Xb = typeof mboxForceSessionId != 'undefined' ? mboxForceSessionId : mboxGetPageParameter(this.Kc); if (this.Xb == null || this.Xb.length == 0) { this.Xb = Y.getCookie(Qb); if (this.Xb == null || this.Xb.length == 0) { this.Xb = Jc; this.Mc = true; } } Y.setCookie(Qb, this.Xb, Lc);};mboxSession.prototype.getId = function() { return this.Xb;};mboxSession.prototype.forceId = function(Nc) { this.Xb = Nc; this.Y.setCookie(this.Qb, this.Xb, this.Lc);};mboxPC = function(Qb, Lc, Y) { this.Qb = Qb; this.Lc = Lc; this.Y = Y; this.Xb = typeof mboxForcePCId != 'undefined' ? mboxForcePCId : Y.getCookie(Qb); if (this.Xb != null) { Y.setCookie(Qb, this.Xb, Lc); }};mboxPC.prototype.getId = function() { return this.Xb;};mboxPC.prototype.forceId = function(Nc) { if (this.Xb != Nc) { this.Xb = Nc; this.Y.setCookie(this.Qb, this.Xb, this.Lc); return true; } return false;};mboxGetPageParameter = function(w) { var l = null; var Oc = new RegExp("\\?[^#]*" + w + "=([^\&;#]*)"); var Pc = Oc.exec(document.location); if (Pc != null && Pc.length >= 2) { l = Pc[1]; } return l;};mboxSetCookie = function(w, x, rb) { return mboxFactoryDefault.getCookieManager().setCookie(w, x, rb);};mboxGetCookie = function(w) { return mboxFactoryDefault.getCookieManager().getCookie(w);};mboxCookiePageDomain = function() { var uc = (/([^:]*)(:[0-9]{0,5})?/).exec(document.location.host)[1]; var Qc = /[0-9]{1,3}\.[0-9]{1,3}\.[0-9]{1,3}\.[0-9]{1,3}/; if (!Qc.exec(uc)) { var Rc = (/([^\.]+\.[^\.]{3}|[^\.]+\.[^\.]+\.[^\.]{2})$/).exec(uc); if (Rc) { uc = Rc[0]; if (uc.indexOf("www.") == 0) { uc=uc.substr(4); } } } return uc ? uc: "";};mboxShiftArray = function(Sc) { var l = new Array(); for (var y = 1; y < Sc.length; y++) { l[l.length] = Sc[y]; } return l;};mboxGenerateId = function() { return (new Date()).getTime() + "-" + Math.floor(Math.random() * 999999);};mboxScreenHeight = function() { return screen.height;};mboxScreenWidth = function() { return screen.width;};mboxBrowserWidth = function() { return (window.innerWidth) ? window.innerWidth : document.documentElement ? document.documentElement.clientWidth : document.body.clientWidth;};mboxBrowserHeight = function() { return (window.innerHeight) ? window.innerHeight : document.documentElement ? document.documentElement.clientHeight : document.body.clientHeight;};mboxBrowserTimeOffset = function() { return -new Date().getTimezoneOffset();};mboxScreenColorDepth = function() { return screen.pixelDepth;};if (typeof mboxVersion == 'undefined') { var mboxVersion = 55; var mboxFactories = new mboxMap(); var mboxFactoryDefault = new mboxFactory('comcastresidentialservices.tt.omtrdc.net', 'comcastresidentialservices', 'default');};if (mboxGetPageParameter("mboxDebug") != null || mboxFactoryDefault.getCookieManager() .getCookie("debug") != null) { setTimeout(function() { if (typeof mboxDebugLoaded == 'undefined') { alert('Could not load the remote debug.\nPlease check your connection' + ' to Test&amp;Target servers'); } }, 60*60); document.write('<' + 'scr' + 'ipt language="Javascript1.2" src=' + '"//admin12.testandtarget.omniture.com/admin/mbox/mbox_debug.jsp?mboxServerHost=comcastresidentialservices.tt.omtrdc.net' + '&clientCode=comcastresidentialservices"><' + '\/scr' + 'ipt>');};mboxScPluginFetcher = function(r, Tc) { this.r = r; this.Tc = Tc;};mboxScPluginFetcher.prototype.Uc = function(L) { L.setBasePath('/m2/' + this.r + '/sc/standard'); this.Vc(L); var u = L.buildUrl(); u += '&scPluginVersion=1'; return u;};mboxScPluginFetcher.prototype.Vc = function(L) { var Wc = [ "dynamicVariablePrefix","visitorID","vmk","ppu","charSet", "visitorNamespace","cookieDomainPeriods","cookieLifetime","pageName", "currencyCode","variableProvider","channel","server", "pageType","transactionID","purchaseID","campaign","state","zip","events", "products","linkName","linkType","resolution","colorDepth", "javascriptVersion","javaEnabled","cookiesEnabled","browserWidth", "browserHeight","connectionType","homepage","pe","pev1","pev2","pev3", "visitorSampling","visitorSamplingGroup","dynamicAccountSelection", "dynamicAccountList","dynamicAccountMatch","trackDownloadLinks", "trackExternalLinks","trackInlineStats","linkLeaveQueryString", "linkDownloadFileTypes","linkExternalFilters","linkInternalFilters", "linkTrackVars","linkTrackEvents","linkNames","lnk","eo" ]; for (var y = 0; y < Wc.length; y++) { this.Xc(Wc[y], L); } for (var y = 1; y <= 75; y++) { this.Xc('prop' + y, L); this.Xc('eVar' + y, L); this.Xc('hier' + y, L); }};mboxScPluginFetcher.prototype.Xc = function(w, L) { var x = this.Tc[w]; if (typeof x === 'undefined' || x === null || x === '' || typeof x === 'object') { return; } L.addParameter(w, x);};mboxScPluginFetcher.prototype.cancel = function() { };mboxScPluginFetcher.prototype.fetch = function(L) { L.setServerType(this.getType()); var u = this.Uc(L); this.M = document.createElement('script'); this.M.src = u; document.body.appendChild(this.M);};mboxScPluginFetcher.prototype.getType = function() { return 'ajax';};function mboxLoadSCPlugin(Tc) { if (!Tc) { return null; } Tc.m_tt = function(Tc) { var Yc = Tc.m_i('tt'); Yc.W = true; Yc.r = 'comcastresidentialservices'; Yc['_t'] = function() { if (!this.isEnabled()) { return; } var mb = this._c(); if (mb) { var kc = new mboxScPluginFetcher(this.r, this.s); mb.setFetcher(kc); mb.load(); } }; Yc.isEnabled = function() { return this.W && mboxFactoryDefault.isEnabled(); }; Yc._c = function() { var qb = this.ad(); var Ub = document.createElement('DIV'); return mboxFactoryDefault.create(qb, new Array(), Ub); }; Yc.ad = function() { var bd = this.s.events && this.s.events.indexOf('purchase') != -1; return 'SiteCatalyst: ' + (bd ? 'purchase' : 'event'); }; }; return Tc.loadModule('tt');};mboxVizTargetUrl = function(qb ) { if (!mboxFactoryDefault.isEnabled()) { return; } var L = mboxFactoryDefault.getUrlBuilder().clone(); L.setBasePath('/m2/' + 'comcastresidentialservices' + '/viztarget'); L.addParameter('mbox', qb); L.addParameter('mboxId', 0); L.addParameter('mboxCount', mboxFactoryDefault.getMboxes().length() + 1); var Gb = new Date(); L.addParameter('mboxTime', Gb.getTime() - (Gb.getTimezoneOffset() * 60000)); L.addParameter('mboxPage', mboxGenerateId()); var s = mboxShiftArray(arguments); if (s && s.length > 0) { L.addParameters(s); } L.addParameter('mboxDOMLoaded', mboxFactoryDefault.isDomLoaded()); mboxFactoryDefault.setVisitorIdParameters(L, qb); return L.buildUrl();};TNT.createGlobalMbox = function () { var cd = "target-global-mbox"; var dd = ("".length === 0); var ed = ""; var fd; if (dd) { ed = "mbox-" + cd + "-" + mboxGenerateId(); fd = document.createElement("div"); fd.className = "mboxDefault"; fd.id = ed; fd.style.visibility = "hidden"; fd.style.display = "none"; mboxFactoryDefault.addOnLoad(function(){ document.body.insertBefore(fd, document.body.firstChild); }); } var gd = mboxFactoryDefault.create(cd, TNT.a.b(), ed); if (gd != null) { gd.load(); }}; document.write('<script src="' + document.location.protocol + '//cdn.tt.omtrdc.net/cdn/target.js"></script>'); TNT.createGlobalMbox();