/***
*
 * Disqus Popular Threads Widget
 * Original code can be found here: http://www.dforge.net/2012/12/14/wordpress-disqus-popular-threads-widget-using-pure-javascript/
 *
 */
var dpt_counter = 0;
var domain = JSON.parse(dptObj.domain);
DiscusMostPopularThreads = function (config) {
    /* Class options */
    this.feedUrl = 'https://disqus.com/api/3.0/threads/listPopular.json'; 
    this.api_key = ''; /* Your Disqus API Key*/
    this.forum = ''; /* Your Disqus Forum ID */
    this.days_back = '7d'; /* Days back to get data */
    this.limit = '5'; /* Number of threads to retrieve */
    
    var parent = null;
    var me = this;
    var init = function () {
        /* Get this script's parent node */
        var scripts = document.getElementsByTagName('script');
        parent = scripts[scripts.length - 1].parentNode;
    };
    var sendRequest = function (p) { /* To get around CORS issue with Disqus, we'll use JSONP (ugh) */
        /* First, remove any prior script tags that were generated by this class */
        var old_jsonp = document.getElementById('wp-disqus-pt'+dpt_counter);
        if(old_jsonp) {
            parent.removeChild(old_jsonp);
        };
        /* Build the script tag to do the JSONP request */
        var jsonp = document.createElement('script');
        jsonp.id = 'wp-disqus-pt'+dpt_counter;
        jsonp.type = 'text/javascript';
        jsonp.src = p.req + (p.req.indexOf('?') == -1 ? '?' : '') + serialize(p.req_vars);
        parent.appendChild(jsonp);
    };
    var getName = function () { /* Method to determine this instance's name in order to do the handleData JSONP callback */
        for (var name in window)
            if (window[name] == me)
                return name;
    };
    var serialize = function (o) { /* Used to build GET request to Disqus */
        var str = "";
        for(p in o) {
            str += p + "=" + o[p] + "&";
        };
        if(str.length > 0) str = str.substr(0, str.length - 1);
        return str;
    };

    /* Public methods */
    this.getData = function () {
        sendRequest({
            req: me.feedUrl,
            req_vars: {
                api_key: me.api_key,
                forum: me.forum,
                interval: me.days_back,
                limit: me.limit,
                with_top_post: 'true',
                related: 'author',
                callback: getName() + '.handleData'
            }
        });
    };
    this.handleData = function (d) { /* Needs to be public in order for the JSONP callback to work */
        me.data = d.response;
        var comments = document.createElement('ul');
        for (var i in me.data) {
            var cdata = me.data[i];
            var url = '';
            if (cdata.link.indexOf('http://') >= 0 || cdata.link.indexOf('https://') >= 0) {
                url = cdata.link;
            }
            else {
                url = domain+cdata.link;
            }
            var comment = document.createElement('li');
            var commentTxt = document.createElement('div');
            commentTxt.setAttribute('class', 'txt-box');
            var commentTxtSpan = document.createElement('span');
            commentTxtSpan.setAttribute('class', 'txt');
            var commentTxtComment = document.createElement('div');
            commentTxtComment.setAttribute('class', 'link-comments');
            var comment_title = document.createElement('a');
            var comment_title_temp = document.createElement('div');
            comment_title_temp.innerHTML = cdata.title; /* Javascript HTML entity decode hack */
            comment_title.appendChild(document.createTextNode(comment_title_temp.firstChild.nodeValue));
            var href = document.createAttribute('href');
            comment_title.setAttribute('href', url);
            var comment_number= document.createElement('a');
            var comment_number_temp = document.createElement('div');
            var commentText = ' Comment';
            if (cdata.postsInInterval > 1) {
              commentText = commentText + 's';
            }
            comment_number_temp.innerHTML = cdata.posts + commentText; /* Javascript HTML entity decode hack */
            comment_number.appendChild(document.createTextNode(comment_number_temp.firstChild.nodeValue));
            comment_number.setAttribute('href', url);
            commentTxtComment.appendChild(comment_number);
            commentTxtSpan.appendChild(comment_title);
            commentTxt.appendChild(commentTxtSpan);
            commentTxt.appendChild(commentTxtComment);
            comment.appendChild(commentTxt);
            comments.appendChild(comment);
        };
        parent.appendChild(comments);
    };

    /* Class constructor */
    var constructor = function (c) {
        for(p in c) {
            me[p] = c[p];
        };
        init();
    };
    constructor(config);
    dpt_counter++;
};