
/* Controltag Loader for Ticketmaster */
(function(){
  var debugging = /kxdebug/.test(location);
  var log = function() {
    // It's a flag, so if it's there, then it means debug.
    debugging && window.console && console.log([].slice.call(arguments).join(' '));
  };

  var load = function(url, callback) {
    log('Loading script from:', url);
    var node = document.createElement('script');
    node.async = true;  // This is just to be friendly.
    node.src = url;

    // Connect to both in case we're in older IE.
    node.onload = node.onreadystatechange = function() {
      var state = node.readyState;
      if (!callback.done && (!state || /loaded|complete/.test(state))) {
        log('Script loaded from:', url);
        callback.done = true;  // Mark the callback, so we don't load it twice on accident.
        callback();
      }
    };

    // Fetch the first script element, so we can insert the
    // controltag before it. There *must* be at least one
    // script element, or this code would never be called
    var sibling = document.getElementsByTagName('script')[0];
    sibling.parentNode.insertBefore(node, sibling);
  };

  // ControlTag simply crashes when opening a website from Twitter browser on
  // iOS, temporarily disable CT when Twitter for iPhone is detected until they
  // fix this (works fine with other twitter client though)
  if (/Twitter for iPhone/.test(window.navigator.userAgent || '')) return;

  var config = {"partner_segment_map": {}, "context_terms": [], "tags": [{"content": "<script>\r\n(function(){\r\n  var kuid = Krux('get', 'user');\r\n  if (kuid) {\r\n      var liveramp_url = 'https://idsync.rlcdn.com/379708.gif?partner_uid=' + kuid;\r\n      var i = new Image();\r\n      i.src = liveramp_url;     \r\n  }\r\n})();\r\n</script>", "target": "", "target_action": null, "require": "", "docwrite": null, "template_replacement": 1, "execution_results": null, "tier": 2, "internal": false, "content_type": "html", "timing": "asap", "method": "document", "type": "publisher", "id": 34367, "name": "LiveRamp User Match"}, {"content": "<img src=\"//adadvisor.net/adscores/g.js?sid=9212244187&_kdpid=2111c0af-fc3a-446f-ab07-63aa74fbde8e\" />", "target": null, "target_action": "append", "require": "", "docwrite": null, "template_replacement": 1, "execution_results": null, "tier": 1, "internal": 22, "content_type": "html", "freq_cap": 3, "timing": "onload", "method": "document", "type": "data provider", "id": 36614, "name": "AdAdvisor S2S provider tag"}, {"content": "<script>\r\n(function(){\r\n  var kuid = Krux('get', 'user');\r\n  if (kuid) {\r\n      var liveramp_url = 'https://idsync.rlcdn.com/379708.gif?partner_uid=' + kuid;\r\n      var i = new Image();\r\n      i.src = liveramp_url;      \r\n  }\r\n})();\r\n</script>", "target": null, "target_action": "append", "require": "", "docwrite": null, "template_replacement": 1, "execution_results": null, "tier": 1, "internal": 21, "content_type": "html", "freq_cap": 3, "timing": "onload", "method": "document", "type": "data provider", "id": 36615, "name": "Acxiom S2S provider tag"}, {"content": "<script>\r\n(function() {\r\n  var sniff;\r\n  try {\r\n    sniff = Krux('require:sniff');\r\n  } catch(e) {} \r\n\r\n  // krxd.nexac.com throws SSL cert errors so only fire this tag\r\n  // on HTTP pages\r\n  if (location.protocol == \"http:\") {\r\n      var kuid = Krux('get', 'user');\r\n      if (kuid) {\r\n         var u = \"http://krxd.nexac.com/dlx.gif?_kdpid=2dd640a6-6ebd-4d4f-af30-af8baa441a0d&kuid=\" + kuid;\r\n         (new Image()).src = u;\r\n         var di = \"http://beacon.krxd.net/event.gif?event_id=Jo7PIOui&type=regular&event_type=cnt\";\r\n         (new Image()).src = di;   \r\n      }\r\n      else if (sniff && sniff.browser === sniff.Browsers.SAFARI) {\r\n        var u = \"http://krxd.nexac.com/dlx.gif?_kdpid=2dd640a6-6ebd-4d4f-af30-af8baa441a0d&browser=safari&kuid=\" + kuid;\r\n        (new Image()).src = u;\r\n      }\r\n   } else {\r\n       var di = \"https://beacon.krxd.net/event.gif?event_id=Jo7PIOui&type=secure&event_type=cnt\";\r\n       (new Image()).src = di;   \r\n   }\r\n})();\r\n</script>", "target": null, "target_action": "append", "require": "", "docwrite": null, "template_replacement": 1, "execution_results": null, "tier": 1, "internal": 8, "content_type": "html", "freq_cap": 3, "timing": "onload", "method": "document", "type": "data provider", "id": 36616, "name": "DataLogix provider tag"}, {"content": "<script>\r\n(function(){\r\n  var kuid = Krux('get', 'user');\r\n  if (kuid) {\r\n    Krux('require:http').pixel({\r\n      url: \"//loadm.exelator.com/load\",\r\n      data: {\r\n          _kdpid: 'e4942ff0-4070-4896-a7ef-e6a5a30ce9f9',\r\n          buid: kuid,\r\n          p: '204',\r\n          g: '270',\r\n          j: '0'\r\n      }});\r\n  }\r\n  })();\r\n</script>", "target": null, "target_action": "append", "require": "", "docwrite": null, "template_replacement": 1, "execution_results": null, "tier": 1, "internal": 11, "content_type": "html", "freq_cap": 3, "timing": "onload", "method": "document", "type": "data provider", "id": 36617, "name": "eXelate Media provider tag"}, {"content": "<script type=\"text/javascript\">Krux('social.init');</script>", "target": null, "target_action": "append", "require": "", "docwrite": null, "internal": 1, "template_replacement": 1, "execution_results": null, "tier": 1, "library_tag_config": {}, "content_type": "html", "timing": "onload", "method": "document", "type": "library", "id": 33071, "name": "Krux Track Social"}, {"content": "<script>\r\n// this tag is intentionally blank\r\n</script>", "target": null, "target_action": "append", "require": "", "docwrite": null, "template_replacement": 1, "execution_results": null, "tier": 1, "internal": 6, "content_type": "html", "freq_cap": 3, "timing": "onload", "method": "document", "type": "data provider", "id": 33072, "name": "Technographic Data provider tag"}, {"content": "", "target": null, "target_action": "append", "require": "", "docwrite": null, "template_replacement": 1, "execution_results": null, "tier": 1, "internal": 14, "content_type": "html", "freq_cap": 3, "timing": "onload", "method": "document", "id": 33073, "name": "Krux Geographic Data provider tag"}, {"content": "<script>\r\n(function(){\r\n        var kuid = Krux('get', 'user');\r\n        var prefix = location.protocol;\r\n        if (kuid) {\r\n           var dxu_url = '//i.w55c.net/ping_match.gif?st=Krux&rurl=' + prefix + '//beacon.krxd.net/usermatch.gif?partner=dataxu&uid=_wfivefivec_';\r\n           var i = new Image();\r\n           i.src = dxu_url;\r\n        }\r\n})();\r\n</script>", "target": "", "target_action": null, "require": "", "docwrite": null, "template_replacement": 1, "execution_results": {"onloadSafe": true, "docwrite": false, "listeners": []}, "tier": 1, "internal": false, "content_type": "html", "freq_cap": 3, "timing": "onload", "method": "document", "type": "publisher", "id": 37140, "name": "DataXu User Match"}, {"content": "<script>\r\n(function() {\r\n  \r\n    function to_param_string(url, obj) {\r\n        var str = [];\r\n        str.push(url);\r\n        for(var p in obj) {\r\n            str.push(encodeURIComponent(p) + \"=\" + encodeURIComponent(obj[p]));\r\n        }\r\n        return str.join(\"&\");\r\n    }\r\n\r\n    var dict = {\"_kpid\" : \"2e260288-c28a-415e-b702-6c4bf3b0a552\"};\r\n\r\n    if (window.digitalData && window.digitalData.page && window.digitalData.page.attributes && window.digitalData.page.category && window.digitalData.page.pageInfo) {\r\n        dict[\"artistID\"] = digitalData.page.attributes.artistID;\r\n        dict[\"artistName\"] = digitalData.page.attributes.artistName;\r\n        dict[\"eventID\"] = digitalData.page.attributes.eventID;\r\n        dict[\"eventName\"] = digitalData.page.attributes.eventName;\r\n        dict[\"eventData\"] = digitalData.page.attributes.eventDate;\r\n        dict[\"venueID\"] = digitalData.page.attributes.venueID;\r\n        dict[\"venueName\"] =digitalData.page.attributes.venueName;\r\n        dict[\"venueZip\"] = digitalData.page.attributes.zip;\r\n        dict[\"majorCatId\"] = digitalData.page.category.primaryCategoryID;\r\n        dict[\"minorCatId\"] =  digitalData.page.category.subCategory1ID;\r\n        dict[\"pageName\"] =  digitalData.page.pageInfo.pageName;\r\n        dict[\"onsiteSearchTerm\"] = digitalData.page.pageInfo.onsiteSearchTerm;\r\n        dict[\"referringURL\"] = digitalData.page.pageInfo.referringURL;\r\n        dict[\"language\"] = digitalData.page.pageInfo.language;\r\n        dict[\"majorCatName\"] = digitalData.page.category.primaryCategory;\r\n        dict[\"minorCatName\"] = digitalData.page.category.subCategory1;\r\n        dict[\"brandID\"] = digitalData.page.attributes.brand;\r\n    }\r\n\r\n    if (window.digitalData && window.digitalData.transaction) {\r\n        var txnId = digitalData.transaction.transactionID;\r\n            if (digitalData.transaction.attributes) {\r\n                dict[\"quantity\"] = digitalData.transaction.attributes.ticketQuantity;\r\n                dict[\"orderDate\"] = digitalData.transaction.attributes.orderDate;\r\n                dict[\"orderTime\"] = digitalData.transaction.attributes.orderTime;\r\n                dict[\"resale\"] = digitalData.transaction.attributes.isResale;\r\n            }\r\n            if (digitalData.transaction.profile) {\r\n                dict[\"billingState\"] = digitalData.transaction.profile.address.stateProvince;\r\n                dict[\"billingZip\"] = digitalData.transaction.profile.address.postalCode;\r\n                dict[\"country\"] = digitalData.transaction.profile.address.country;\r\n            }\r\n            if (digitalData.transaction.total) {\r\n                dict[\"totalPrice\"] = digitalData.transaction.total.basePrice;\r\n            }\r\n       if (window.digitalData && window.digitalData.user && window.digitalData.user[0] && window.digitalData.user[0].profile && window.digitalData.user[0].profile[0] && window.digitalData.user[0].profile[0].profileInfo) {\r\n            var profile_id = digitalData.user[0].profile[0].profileInfo.profileID;\r\n            // Using Profile ID to produce user attribute profile_id\r\n            if (profile_id != null && profile_id != \"\") {\r\n                dict[\"profile_id\"] = profile_id;\r\n            }\r\n        }\r\n        new Image().src = to_param_string(\"//beacon.krxd.net/transaction.gif?\", dict);\r\n    }\r\n})();\r\n\r\n</script>", "target": "", "target_action": null, "require": "", "docwrite": null, "template_replacement": 1, "execution_results": {"onloadSafe": true, "docwrite": false, "listeners": []}, "tier": 1, "internal": 1, "content_type": "html", "timing": "onload", "method": "document", "type": "publisher", "id": 43593, "name": "DTC Transaction"}, {"content": "<script>\r\n(function(){\r\n  var kuid = Krux('get', 'user');\r\n  if (kuid && typeof kuid != 'undefined') {\r\n      var prefix = location.protocol == 'https:' ? \"https:\" :\"http:\";\r\n      var r_url = prefix + '//cm.g.doubleclick.net/pixel'\r\n      var kurl = prefix + '//apiservices.krxd.net/um?partner=google&r=' + r_url;\r\n      var i = new Image();\r\n      i.src = kurl;\r\n  }\r\n})();\r\n</script>", "target": "", "target_action": null, "require": "", "docwrite": null, "template_replacement": 1, "execution_results": null, "tier": 1, "internal": 1, "content_type": "html", "freq_cap": 3, "timing": "onload", "method": "document", "type": "publisher", "id": 40579, "name": "Google User Match"}, {"content": "<script>\r\n(function() {\r\n  if (window.digitalData && window.digitalData.page && window.digitalData.page.attributes && window.digitalData.page.category && window.digitalData.page.pageInfo) {\r\n    var artistID = digitalData.page.attributes.artistID;\r\n    var artistName = digitalData.page.attributes.artistName;\r\n    var eventID = digitalData.page.attributes.eventID;\r\n    var eventName = digitalData.page.attributes.eventName;\r\n    var eventDate = digitalData.page.attributes.eventDate;\r\n    var venueID = digitalData.page.attributes.venueID;\r\n    var venueName = digitalData.page.attributes.venueName;\r\n    var venueZip = digitalData.page.attributes.zip;\r\n    var majorCatId = digitalData.page.category.primaryCategoryID;\r\n    var minorCatId =  digitalData.page.category.subCategory1ID;\r\n    var pageName =  digitalData.page.pageInfo.pageName;\r\n    var onsiteSearchTerm = digitalData.page.pageInfo.onsiteSearchTerm;\r\n    var referringURL = digitalData.page.pageInfo.referringURL;\r\n    var language = digitalData.page.pageInfo.language;\r\n    var majorCatName = digitalData.page.category.primaryCategory;\r\n    var minorCatName = digitalData.page.category.subCategory1;\r\n    var brandID = digitalData.page.attributes.brand;\r\n\r\n    if (artistID !=null && artistID != \"\")  {\r\n    Krux('set', {'page_attr_artistID': artistID });\r\n    }\r\n    if (artistName !=null && artistName != \"\")  {\r\n    Krux('set', {'page_attr_artistName': artistName });\r\n    }\r\n    if (eventID !=null && eventID != \"\")  {\r\n    Krux('set', {'page_attr_eventID': eventID });\r\n    }\r\n    if (eventName !=null && eventName != \"\")  {\r\n    Krux('set', {'page_attr_eventName': eventName });\r\n    }\r\n    if (eventDate !=null && eventDate != \"\")  {\r\n    Krux('set', {'page_attr_eventDate': eventDate });\r\n    }\r\n    if (venueID !=null && venueID != \"\")  {\r\n    Krux('set', {'page_attr_venueID': venueID });\r\n    }\r\n    if (venueName !=null && venueName != \"\")  {\r\n    Krux('set', {'page_attr_venueName': venueName });\r\n    }\r\n    if (venueZip !=null && venueZip != \"\")  {\r\n    Krux('set', {'page_attr_venueZip': venueZip });\r\n    }\r\n    if (majorCatId !=null && majorCatId != \"\")  {\r\n    Krux('set', {'page_attr_majorCatId': majorCatId });\r\n    }\r\n    if (minorCatId !=null && minorCatId != \"\")  {\r\n    Krux('set', {'page_attr_minorCatId': minorCatId });\r\n    }\r\n    if (pageName !=null && pageName != \"\")  {\r\n    Krux('set', {'page_attr_pageName': pageName });\r\n    }\r\n    if (onsiteSearchTerm !=null && onsiteSearchTerm != \"\")  {\r\n    Krux('set', {'page_attr_onsiteSearchTerm': onsiteSearchTerm });\r\n    }\r\n    if (referringURL !=null && referringURL != \"\")  {\r\n    Krux('set', {'page_attr_referringURL': referringURL });\r\n    }\r\n    if (language !=null && language != \"\")  {\r\n    Krux('set', {'page_attr_language': language });\r\n    }\r\n    if (majorCatName !=null && majorCatName != \"\")  {\r\n    Krux('set', {'page_attr_majorCatName': majorCatName });\r\n    }\r\n    if (minorCatName !=null && minorCatName != \"\")  {\r\n    Krux('set', {'page_attr_minorCatName': minorCatName });\r\n    }\r\n    if (brandID !=null && brandID != \"\")  {\r\n    Krux('set', {'page_attr_brandID': brandID });\r\n    }\r\n  }\r\n\r\n})();\r\n\r\n</script>\r\n\r\n<script>\r\n// Using Meta keywords to produce page attribute keywords\r\nKrux('scrape', { \"page_attr_keywords\": {meta_name: \"keywords\"}});\r\n\r\n</script>", "target": "", "target_action": null, "require": "", "docwrite": null, "template_replacement": 1, "execution_results": {"onloadSafe": true, "docwrite": false, "listeners": []}, "tier": 1, "internal": 1, "content_type": "html", "timing": "onload", "method": "document", "type": "publisher", "id": 34960, "name": "DTC"}, {"content": "<script>\r\n(function()\r\n{ var i = new Image(); i.src = '//match.adsrvr.org/track/cmf/generic?ttd_pid=krux&ttd_tpi=1'; }\r\n)();\r\n</script>", "target": "", "target_action": null, "require": "", "docwrite": null, "template_replacement": 1, "execution_results": null, "tier": 1, "internal": false, "content_type": "html", "freq_cap": 3, "timing": "onload", "method": "document", "type": "publisher", "id": 38559, "name": "TTD User Match"}, {"content": "<script>(function() {\r\n  var _fbq = window._fbq || (window._fbq = []);\r\n  if (!_fbq.loaded) {\r\n    var fbds = document.createElement('script');\r\n    fbds.async = true;\r\n    fbds.src = '//connect.facebook.net/en_US/fbds.js';\r\n    var s = document.getElementsByTagName('script')[0];\r\n    s.parentNode.insertBefore(fbds, s);\r\n    _fbq.loaded = true;\r\n  }\r\n  _fbq.push(['addPixelId', '1607301972874075']);\r\n})();\r\nwindow._fbq = window._fbq || [];\r\nwindow._fbq.push(['track', 'PixelInitialized', {}]);\r\n</script>\r\n<noscript><img height=\"1\" width=\"1\" alt=\"\" style=\"display:none\" src=\"https://www.facebook.com/tr?id=1607301972874075&amp;ev=PixelInitialized\" /></noscript>", "target": "", "target_action": null, "require": "", "docwrite": null, "template_replacement": 0, "execution_results": {"onloadSafe": true, "docwrite": false, "listeners": [{"capture": false, "type": "popstate", "func": "function () {\n    k = j;\n    j = c.href;\n    e.push([\"track\", \"PixelInitialized\"]);\n}"}]}, "tier": 1, "internal": false, "content_type": "html", "criteria": [{"operator": "=", "name": "country", "value": "US"}, {"operator": "=", "name": "segment", "value": "pe1aeqg6o,o1saypvqf,o62e7d7o5,o6yett7a9,pe0nohs7d"}], "timing": "onload", "method": "document", "type": "publisher", "id": 60575, "name": "Disney On Ice - FB Custom Audience"}, {"content": "<script>(function() {\r\n  var _fbq = window._fbq || (window._fbq = []);\r\n  if (!_fbq.loaded) {\r\n    var fbds = document.createElement('script');\r\n    fbds.async = true;\r\n    fbds.src = '//connect.facebook.net/en_US/fbds.js';\r\n    var s = document.getElementsByTagName('script')[0];\r\n    s.parentNode.insertBefore(fbds, s);\r\n    _fbq.loaded = true;\r\n  }\r\n  _fbq.push(['addPixelId', '1607301972874075']);\r\n})();\r\nwindow._fbq = window._fbq || [];\r\nwindow._fbq.push(['track', 'PixelInitialized', {}]);\r\n</script>\r\n<noscript><img height=\"1\" width=\"1\" alt=\"\" style=\"display:none\" src=\"https://www.facebook.com/tr?id=1607301972874075&amp;ev=PixelInitialized\" /></noscript>", "target": "", "target_action": null, "require": "", "docwrite": null, "template_replacement": 0, "execution_results": {"onloadSafe": true, "docwrite": false, "listeners": [{"capture": false, "type": "popstate", "func": "function () {\n    k = j;\n    j = c.href;\n    e.push([\"track\", \"PixelInitialized\"]);\n}"}]}, "tier": 1, "internal": false, "content_type": "html", "criteria": [{"operator": "=", "name": "segment", "value": "pmazlyntb,pmi3qds1v,pmazwg99j"}], "timing": "onload", "method": "document", "type": "publisher", "id": 60576, "name": "Beyonce Fans - FB Custom Audience"}, {"content": "<script>(function() {\r\n  var _fbq = window._fbq || (window._fbq = []);\r\n  if (!_fbq.loaded) {\r\n    var fbds = document.createElement('script');\r\n    fbds.async = true;\r\n    fbds.src = '//connect.facebook.net/en_US/fbds.js';\r\n    var s = document.getElementsByTagName('script')[0];\r\n    s.parentNode.insertBefore(fbds, s);\r\n    _fbq.loaded = true;\r\n  }\r\n  _fbq.push(['addPixelId', '1607301972874075']);\r\n})();\r\nwindow._fbq = window._fbq || [];\r\nwindow._fbq.push(['track', 'PixelInitialized', {}]);\r\n</script>\r\n<noscript><img height=\"1\" width=\"1\" alt=\"\" style=\"display:none\" src=\"https://www.facebook.com/tr?id=1607301972874075&amp;ev=PixelInitialized\" /></noscript>", "target": "", "target_action": null, "require": "", "docwrite": null, "template_replacement": 0, "execution_results": {"onloadSafe": true, "docwrite": false, "listeners": [{"capture": false, "type": "popstate", "func": "function () {\n    k = j;\n    j = c.href;\n    e.push([\"track\", \"PixelInitialized\"]);\n}"}]}, "tier": 1, "internal": false, "content_type": "html", "criteria": [{"operator": "=", "name": "country", "value": "US"}, {"operator": "=", "name": "segment", "value": "pe1kcuzal,pm2vv9pmh,pe0f37u4r"}], "timing": "onload", "method": "document", "type": "publisher", "id": 60594, "name": "US Open Tennis - FB Custom Audience"}, {"content": "<script>\r\n    (function() {\r\n        var prefix = location.protocol == 'https:' ? \"https\" : \"http\";\r\n        var tm_url = prefix + '://rtd.tubemogul.com/upi/pid/NC4WTmcy?redir=' + prefix + '%3A%2F%2Fbeacon.krxd.net%2Fusermatch.gif%3Fpartner_id%3Dcb276571-e0d9-4438-9fd4-80a1ff034b01%26puid%3D%24%7BTM_USER_ID%7D'\r\n        var i = new Image();\r\n        i.src = tm_url;\r\n    })();\r\n</script>", "target": "", "target_action": null, "require": "", "docwrite": null, "template_replacement": 1, "execution_results": null, "tier": 1, "internal": false, "content_type": "html", "freq_cap": 3, "timing": "onload", "method": "document", "type": "publisher", "id": 42166, "name": "TubeMogul User Match"}, {"content": "<script>\r\nif (window.digitalData && window.digitalData.user[0] && window.digitalData.user[0].profile[0] && window.digitalData.user[0].profile[0].profileInfo) {\r\n\r\nvar profile_id = digitalData.user[0].profile[0].profileInfo.profileID;\r\n\r\n// Using Profile ID to produce user attribute profile_id\r\nif (profile_id != null && profile_id != \"\") {\r\n   Krux('set', {'user_attr_profile_id': profile_id });\r\n  }\r\n}\r\n</script>", "target": "", "target_action": null, "require": "", "docwrite": null, "template_replacement": 1, "execution_results": {"onloadSafe": true, "docwrite": false, "listeners": []}, "tier": 1, "internal": 1, "content_type": "html", "timing": "onready", "method": "document", "type": "publisher", "id": 35376, "name": "DTC - Profile ID"}, {"content": "<script>(function() {\r\n  var _fbq = window._fbq || (window._fbq = []);\r\n  if (!_fbq.loaded) {\r\n    var fbds = document.createElement('script');\r\n    fbds.async = true;\r\n    fbds.src = '//connect.facebook.net/en_US/fbds.js';\r\n    var s = document.getElementsByTagName('script')[0];\r\n    s.parentNode.insertBefore(fbds, s);\r\n    _fbq.loaded = true;\r\n  }\r\n  _fbq.push(['addPixelId', '1583095185306154']);\r\n})();\r\nwindow._fbq = window._fbq || [];\r\nwindow._fbq.push(['track', 'PixelInitialized', {}]);\r\n</script>\r\n<noscript><img height=\"1\" width=\"1\" alt=\"\" style=\"display:none\" src=\"https://www.facebook.com/tr?id=1583095185306154&amp;ev=PixelInitialized\" /></noscript>", "target": "", "target_action": null, "require": "", "docwrite": null, "template_replacement": 0, "execution_results": {"onloadSafe": true, "docwrite": false, "listeners": [{"capture": false, "type": "popstate", "func": "function () {\n    k = j;\n    j = c.href;\n    e.push([\"track\", \"PixelInitialized\"]);\n}"}]}, "tier": 8, "internal": false, "content_type": "html", "criteria": [{"operator": "=", "name": "segment", "value": "ploh2hvd7"}], "timing": "onready", "method": "document", "type": "publisher", "id": 58597, "name": "FB Custom Audience - All Users"}], "segments": [], "publisher": {"uuid": "2e260288-c28a-415e-b702-6c4bf3b0a552", "id": 12304, "name": "Ticketmaster"}, "controltag_options": {"async": "true", "render": true}, "site": {"id": 18631, "name": "Ticketmaster.com"}, "dnt": null, "params": {"connector_host": "connector.krxd.net", "control_tag_load_sync": "false", "fingerprint": false, "disable_http_compression": false, "remove_kxhead": true, "supertag_requires_approval": false, "config_source": 1, "control_tag_stats_prefix": null, "beacon_host": "beacon.krxd.net", "max_segments": null, "control_tag_pixel_throttle": "100", "user_id_cookie": null, "first_party_uid": false, "no_pii": 0, "recommend": false, "revenue_optimization": false, "context_terms": "false", "jslog_host": "jslog.krxd.net", "site_level_supertag_config": "site", "max_slot_time": 1000, "services_host": "apiservices.krxd.net", "capture_leakage": true, "client_side_storage": "localStorage,cookie", "userData_host": "cdn.krxd.net", "control_tag_namespace": "tkm", "control_tag_version": "stable", "capture_js_errors": "true", "datatag_version": "3", "dfp_premium": "true", "userdata_host": "cdn.krxd.net", "target_fingerprint": false}, "services": {"impression": "//beacon.krxd.net/ad_impression.gif", "stats": "//apiservices.krxd.net/stats", "userdata": "//cdn.krxd.net/userdata/get", "userData": "//cdn.krxd.net/user_data/segments/3", "um": "//apiservices.krxd.net/um", "optout": "//beacon.krxd.net/optout_check", "pixel": "//beacon.krxd.net/pixel.gif", "contentConnector": "//connector.krxd.net/content_connector/", "is_optout": "//beacon.krxd.net/optout_check", "set_optin": "//apiservices.krxd.net/consumer/optin", "social": "//beacon.krxd.net/social.gif", "set_optout": "//apiservices.krxd.net/consumer/optout", "data": "//beacon.krxd.net/data.gif", "event": "//beacon.krxd.net/event.gif", "log": "//jslog.krxd.net/jslog.gif"}, "geo": {}, "realtime_segments": [{"test": ["and", ["or", ["and", ["or", ["intersects", "$page_attr_majorCatName", "[\"arts & theater\"]"]]]]], "id": "pbw3u1x12"}], "confid": "JU5vLBbl"};

  // Wrap in a function and comment, then toString the func and replace
  // everything that's not the beginning or end of a JSON object, so we get a
  // string that's either empty or JSON.
  var esiGeo = String(function(){/*
    <esi:include src="/geoip_esi"/>
  */}).replace(/^.*\/\*[^{]+|[^}]+\*\/.*$/g, '');

  if (esiGeo) {
    log('Got a request for:', esiGeo, 'adding geo to config.');
    try {
      config.geo = window.JSON.parse(esiGeo);
    } catch (__) {
      // Couldn't parse, so setting to {}
      log('Unable to parse geo from:', config.geo);
      config.geo = {};
    }
  }

  
  
  

  load('//cdn.krxd.net/ctjs/controltag.js.875fd5b280a77e06def8c74a5a268e2c', function() {
    
    
    log('Loading krux configuration.');

    Krux('config', config);

    
  });
})();
